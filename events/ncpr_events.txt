namespace = ncpr_events

planet_event = {
	id = ncpr_events_game_start.01
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# Necropurifier: set flag & citizenship type, spawn prepatent Pops, add Traits, set living standards, etc.
		# We only do this for Necropurifier; we already did this for everything else in the base game setup stuff.
		if = {
			limit = {
				owner = {
					has_origin = origin_necropurifier
				}
			}
			# Force-add the fanatic purifiers civic, requires 'owner' scope because it's empire level.
			# We should already meet the other pre-requesites for this because of the
			# origin restrictions, so this shouldn't immediately become invalid.
			owner = {
				force_add_civic = civic_fanatic_purifiers
			}

			# Configure the prepatent species, which is a planet level thing.
			last_created_species = {
				set_species_flag = syncretic_species@root.owner
				set_species_flag = necrophage_purifier_prepatent
				set_citizenship_type = {
					country = root.owner
					type = citizenship_necro_slavery
				}
			}
			while = {
				# Necrophages get 12 prepatent pops, Necropurifiers will only get 8
				# This is probably still an overpowered Origin because of the extra civic
				# But the lower pop starting point MIGHT help balance it a tiny bit.
				count = 8
				create_pop = {
					species = last_created_species
					ethos = random
				}
			}
			# Actual necrophage building
			add_building = building_necrophage_elevation_chamber
		}
	}
}

# Necropurifier Purge

# This is a pretty close copy of the basic necrophage purge code, but slightly modified
# Because the necrophage purge type requires the necrophage origin specifically, and
# changing the purge type makes this not trigger. So it's clunky but we just make a new
# purge event as well to avoid having to modify a bunch of citizenship stuff in the
# vanilla files, since that will cause conflicts everywhere.

# on_pop_purged
# This = Planet scope
# From = Country
# FromFrom = Pop
planet_event = {
	id = ncpr_events_purge.01
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		exists = fromfrom #crisis.202 can remove the last pop
		fromfrom = {
			has_purge_type = {
				type = purge_necropurifier
			}
		}
	}

	immediate = {
		random_owned_pop = {
			limit = {
				is_same_species = owner_species
			}
			species = { save_event_target_as = necrophage_pop_species }
		}
		if = {
			limit = {
				exists = event_target:necrophage_pop_species
			}
			create_pop = {
				species = event_target:necrophage_pop_species
			}
		}
		else = {
			create_pop = {
				species = owner_species
			}
		}
		if = {
			limit = {
				last_created_pop = {
					NOT = { ideal_planet_class = root }
				}
				NOR = {
					uses_district_set = habitat
					uses_district_set = ring_world
					uses_district_set = city_world
					uses_district_set = hive_world
					uses_district_set = machine_world
					is_planet_class = pc_gaia
					is_planet_class = pc_relic
				}
				owner = {
					has_technology = tech_glandular_acclimation
					NOT = { ideal_planet_class = root }
				}
			}
			last_created_pop = {
				modify_species = {
					ideal_planet_class = root
				}
			}
		}
		if = {
			limit = {
				from = {
					OR = {
						has_active_tradition = tr_harmony_unity_of_self
						has_active_tradition = tr_synchronicity_unity_of_mind
					}
				}
			}
			from = {
				add_monthly_resource_mult = {
					resource = unity
					value = 1.5
					min = 5
					max = 100
				}
			}
		}
		every_country = {
			limit = {
				has_communications = FROM
				NOT = { is_country = FROM }
				NOT = { is_same_species = FROMFROM }
				NOT = { has_ai_personality_behaviour = purger }
				NOT = { has_origin = origin_necrophage }
				NOT = { has_ethic = ethic_gestalt_consciousness }
				NOR = {
					has_valid_civic = civic_death_cult
					has_valid_civic = civic_death_cult_corporate
				}
				OR = {
					is_country_type = default
					has_ai_personality = awakened_fallen_empire_xenophile
				}
				has_intel_level = {
					who = FROM
					category = economy
					level >= 2
				}
			}
			add_opinion_modifier = { who = FROM modifier = opinion_necrophage }
		}
		every_country = {
			limit = {
				has_communications = FROM
				NOT = { is_country = FROM }
				is_same_species = FROMFROM
				has_intel_level = {
					who = FROM
					category = economy
					level >= 1 #lower because you'd hear from a friend of a friend
				}
			}
			add_opinion_modifier = { who = FROM modifier = opinion_necrophage_our_species }
		}
	}
}